[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
name = "ark-analysis"
dynamic = ["version"]
description = "Toolbox for analysis on segmented images from MIBI."
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Angelo Lab", email = "theangelolab@gmail.com" }]
maintainers = [
    { name = "Noah Frey Greenwald", email = "nfgreen@stanford.edu" },
    { name = "Alex Kong", email = "alkong@stanford.edu" },
    { name = "Cameron Laura Sowers", email = "csowers@stanford.edu" },
    { name = "Sricharan Reddy Varra", email = "srivarra@stanford.edu" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
urls.Documentation = "https://ark-analysis.readthedocs.io/en/latest/"
urls.Source = "https://github.com/angelolab/ark-analysis"
urls.Home-page = "https://github.com/angelolab/ark-analysis"
dependencies = [
    "alpineer==0.1.12",
    "anndata",
    "datasets>=2.6,<3.0",
    "dill>=0.3.5,<0.4",
    "feather-format>=0.4.1,<1",
    "importlib-metadata>=5.0",
    "ipympl>=0.9.2,<1.0.0",
    "ipython>=8.4,<9",
    "jupyterlab>=3.4.3,<4",
    "matplotlib>=3.7,<4",
    "multiprocess>=0.70.13",
    "natsort>=8,<9",
    "numpy>=1.20,<1.24",
    "palettable>=3.3.0,<4",
    "pandas>=2",
    "pillow>=9,<10",
    "pyFlowSOM>=0.1.16",
    "requests>=2.20,<3",
    "scikit-image<0.19.3",
    "scikit-learn>=1.1,<2",
    "graphviz",
    "scipy>=1.7,<2",
    "seaborn>=0.12,<1",
    "spatial-lda>=0.1.3,<1",
    "statsmodels>=0.13.2,<1",
    "tifffile>=2022",
    "tqdm>=4,<5",
    "umap-learn>=0.5,<1.0",
    "xarray>=2022",
    "xmltodict>=0.13.0,<1",
    "zstandard>=0.19.0,<1",
    "zarr",
    "python-dateutil>=2.9.0",
    "ark-analysis[colors]",
]

[project.optional-dependencies]
dev = ["ark-analysis[test]", "twine"]
colors = ["palettable", "cmasher", "cmocean", "colorcet", "scienceplots"]
test = [
    "attrs",
    "coveralls[toml]",
    "pytest",
    "pytest-cases",
    "pytest-cov",
    "pytest-mock",
    "pytest-pycodestyle",
    "pytest-randomly",
    "pytest-asyncio",
    "testbook",
]
lab_ext = [
    "jupyterlab-lsp",
    "python-lsp-server[all]",
    "jupyterlab-git",
    "jupyterlab_execute_time",
    "jupyterlab-skip-traceback",
    "lckr-jupyterlab-variableinspector",
]

[tool.coverage.run]
source = ["ark"]
omit = ["*test_*.py", "*_test.py"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "except ImportError",
    "raise AssertionError",
    "raise NotImplementedError",
    "(ArrowInvalid, OSError, IOError)",
]

# Pytest Options
[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
addopts = [
    "-v",
    "-s",
    "--durations=20",
    "--randomly-seed=24",
    "--randomly-dont-reorganize",
    "--cov=ark",
    "--pycodestyle",
]
console_output_style = "count"
testpaths = ["tests"]
